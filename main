#include <Adafruit_MotorShield.h>
#include "ultrasensor.h"
#include "counterfunction.h"
#define MAX_RANG (520)//the max measurement value of the module is 520cm(a little bit longerthan effective max range)
#define ADC_SOLUTION (1023.0)//ADC accuracy of Arduino UNO is 10bit

bool linetrack = false;
int buttonPin = 4;
int ledPin=13;
int motorspeed=150; //0-255       
int t = 0;  //time taken in the junction
float sensity_t;

void setup() {
  // put your setup code here, to run once:
  if (!AFMS.begin()) {         // create with the default frequency 1.6KHz
  // if (!AFMS.begin(1000)) {  // OR with a different frequency, say 1KHz
    Serial.println("Could not find Motor Shield. Check wiring.");
    while (1);
  }
  Serial.begin(9600);           // set up Serial library at 9600 bps
  Serial.println("Setup");
  pinMode(buttonPin, INPUT); 
  pinMode(sl,INPUT);
  pinMode(sr,INPUT);
  LeftMotor->setSpeed(motorspeed);
  RightMotor->setSpeed(motorspeed);
  delay(5000);
  int val = digitalRead(buttonPin); // read input value
  myservo.attach(ServoPin); // attaches the servo on pin 9 to the servo object
}

void loop() {
  // put your main code here, to run repeatedly
  int val = digitalRead(buttonPin); // read input value
  LeftMotor->setSpeed(150);
  RightMotor->setSpeed(150);
  if (val==HIGH){
    Serial.print("ON");
    initialise();
    Serial.println("RUN");
  }
 
  while (linetrack==1){
    linetracking();
    } 
}

//UNIVERSAL FUNCTION


//STARTING FUNCTION
void initialise(){
  //move forward for 2 seconds
  Serial.println("INITIALISE");
  LeftMotor->setSpeed(200);
  LeftMotor->run(FORWARD);
  RightMotor->setSpeed(200);
  RightMotor->run(FORWARD);
  delay(200);
  linetrack = true;
  //need to add a release here? myMotor->run(RELEASE);
}


//LINETRACKING FUNCTIONS
void linetracking(){
 svl=digitalRead(sl);
 svr=digitalRead(sr);
 svvr=digitalRead(ssr);
 svvl=digitalRead(ssl);
   
  if(svl==HIGH   && svr==LOW)
  {
  left(); 
  }

  else if(svl==LOW && svr==HIGH)
   { 
  right(); 
  }

  else if(svl==HIGH && svr==HIGH)
   {
  forward();
  }

  else if(svl==LOW && svr==LOW)
  {
   // need to think about what to do when both detects dark;
  }

  else if (counter==0 && (svvl==HIGH || svvr == HIGH))
  {
    counterfunction();
    }

  else if (counter==1 && svvr == HIGH)
  {
    counterfunction();
    }

  else if (counter==2 && svr == LOW && svl == LOW){
    counterfunction();
  }

  else if (counter==3 && (svvl==HIGH || svvr == HIGH)){
    counterfunction();
  }

  else if (counter==4 && (svvl==HIGH || svvr == HIGH)){
    counterfunction();
  }

  else if (counter==5 && (svvr == HIGH || svvl == HIGH) )
  {
    counterfunction();
    }

  else if (counter==6 && (svvr == HIGH || svvl == HIGH) )
  {
    counterfunction();
    }
    else if (counter==7 && svr == LOW && svl == LOW ){
    counterfunction();
  }
  else if (( counter == 8 || counter==9 || counter==10||counter==11||counter==12||counter==13||counter==14||counter==15)&& (svvl==HIGH || svvr == HIGH)){
    counterfunction();
  }
}




  